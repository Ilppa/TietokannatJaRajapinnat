Tehtävät VKO3

Suurin osa vastauksista valitettavasti vain komentoja, keksin screenshotit vasta myöhemmin


5. Employees, Osa 1

a) Minkä nimisiä osastoja (Departments) Employees-tietokannassa on ?
SELECT * FROM departments WHERE 1;

b) Tulosta, (yhden kerran kukin) mitä nimikkeitä (title) tietokannassa on.
SELECT DISTINCT title FROM titles WHERE 1;

c) Mikä on suurin ja pienin palkka (salary) ? VIHJE: MIN, MAX
SELECT MIN(salary) AS Pienin_palkka, MAX(salary) AS Suurin_palkka FROM salaries WHERE 1;

d) Mikä on keskimääräinen palkka ? VIHJE: AVG
SELECT AVG(salary) FROM salaries WHERE 1;

e) Tulosta kaikki työntekijät, joiden sukunimi on Facello.
SELECT last_name AS Sukunimi, first_name AS Etunimi FROM employees WHERE last_name = "Facello";

f) Kuinka moni työntekijä on syntynyt 1950-luvulla ?
SELECT COUNT(*) AS Employees FROM employees WHERE YEAR(birth_date) BETWEEN '1950' AND '1959';

g) Montako miestä ja montako naista työntekijöissä on ?
SELECT gender, COUNT(*) FROM employees GROUP BY gender;


6. Pet ja Owner
Loin phpMyAdminissa uuden tietokannan nimeltä Pet&Owner
kirjoitin seuraavan laisen sql komento litanian saadakseni 
erilliset taulut Pet ja Owner

Pet taulun luominen
CREATE TABLE pet (
    pet_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    species VARCHAR(50),
    owner_id INT,
    FOREIGN KEY (owner_id) REFERENCES owner(owner_id)
        ON DELETE CASCADE
);

Owner taulun luominen
CREATE TABLE owner (
    owner_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    address VARCHAR(255),
    phone_number VARCHAR(15)
);

DESC-lauseiden tulokset
Löytyvät palautetusta PDF-filusta


7. Employees, Osa 2
a) Tulosta kymmenen aakkosjärjestyksessä ensimmäisen työntekijän tiedot sukunimen mukaan lajiteltuna. Vihje: LIMIT rajoittaa tulostettavien tietojen määrän.
SELECT * FROM employees ORDER BY employees.last_name ASC LIMIT 10;
b) Sama kuten edellä, mutta sukunimen JA etunimen mukaan lajiteltuna.
SELECT * FROM employees ORDER BY employees.last_name, first_name ASC LIMIT 10;
c) Tulosta viiden viimeksi palkatun työntekijän tiedot.
SELECT * FROM employees ORDER BY hire_date DESC LIMIT 5;
Seuraavissa tehtävissä tarvitaan tietoja useammasta kuin yhdestä taulusta (JOIN).
d) Kenellä on suurin palkka ? Tulosta etunimi, sukunimi ja palkka.
SELECT employees.first_name,employees.last_name,salaries.salary FROM employees JOIN salaries ON employees.emp_no ORDER BY salaries.salary DESC LIMIT 1;
e) Kenellä on pienin palkka ? Tulosta etunimi, sukunimi ja palkka.
SELECT employees.first_name,employees.last_name,salaries.salary FROM employees JOIN salaries ON employees.emp_no ORDER BY salaries.salary ASC LIMIT 1;
f) Tulosta työntekijät (etunimi, sukunimi, palkka), jotka ansaitsevat yli 150000.
SELECT employees.first_name, employees.last_name, salaries.salary FROM employees JOIN salaries ON employees.emp_no = salaries.emp_no WHERE salaries.salary > 150000; 
g) Kuinka monta työntekijää työskentelee myynnissä (Sales) ? Entä markkinoinnissa (Marketing) ?
SELECT COUNT(dept_emp.dept_no) AS SALES_COUNT FROM dept_emp JOIN departments ON dept_emp.dept_no = departments.dept_no WHERE departments.dept_name IN ("Sales", "Marketing") GROUP BY departments.dept_name;


h) Tulosta kaikkien osastonjohtajien (Department Managers) etunimi, sukunimi ja osasto, jolla työskentelee.
SELECT employees.first_name, employees.last_name, departments.dept_name FROM dept_manager JOIN departments ON dept_manager.dept_no = departments.dept_no JOIN employees ON dept_manager.emp_no = employees.emp_no;
i) Mikä on myynnissä työskentelevien keskipalkka ? Entä markkinoinnissa ?

SELECT departments.dept_name AS department_name, AVG(salaries.salary) AS average_salary FROM dept_emp
JOIN departments ON dept_emp.dept_no = departments.dept_no
JOIN salaries ON dept_emp.emp_no = salaries.emp_no
WHERE departments.dept_name IN ("Sales", "Marketing") GROUP BY departments.dept_name;

8. Sakila
a) Tulosta DVD-elokuvien kielet (language) aakkosjärjestyksessä
SELECT * FROM `language` WHERE 1 ORDER BY name ASC;
b) Tulosta kaikkien niiden näyttelijöiden elokuvat, joiden sukunimi on Temple.
 SELECT DISTINCT film.title AS temple_elokuvat FROM film_actor JOIN actor ON film_actor.actor_id = actor.actor_id JOIN film ON film_actor.film_id = film.film_id where actor.last_name = 'Temple';
c) Tulosta elokuvassa "Ghost Groundhog" näytelleet näyttelijät.
SELECT DISTINCT actor.*FROM film_actor JOIN actor on film_actor.actor_id = actor.actor_id join film on film_actor.film_id = film.film_id where film.title = 'Ghost Groundhog'; 
d) Montako kauhuelokuvaa ("Horror") tietokannassa on ?
SELECT count(film.title) FROM film_category join category on film_category.category_id = category.category_id join film on film_category.film_id = film.film_id where category.name = 'Horror'; 
e) Tulosta kaikki kauhuelokuvat.
SELECT * FROM film_category join category on film_category.category_id = category.category_id join film on film_category.film_id = film.film_id where category.name = 'Horror'; 
